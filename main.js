const levels = [
    [
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,2,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,
        1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
        1,1,1,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,
        1,0,0,0,1,1,0,1,1,1,1,0,1,1,0,0,0,0,0,1,
        1,0,1,1,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,
        1,0,0,0,0,0,0,1,1,1,1,0,1,1,0,0,0,0,0,1,
        1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,
        1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,
        1,0,0,0,1,1,1,0,0,0,1,0,1,1,0,1,1,1,1,1,
        1,0,1,0,1,1,1,0,1,0,1,0,1,1,0,0,0,0,1,1,
        1,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,1,1,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,
        1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,
        1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,1,
        1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,
        1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    ],
    [
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,
        1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
        1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
        1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
        1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
        1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,
        1,1,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    ],
    [
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
        1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,
        1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,
        1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,0,0,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,3,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,
        1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,
        1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,
        1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
        1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    ],
    [
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
        1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,
        1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,
        1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,0,0,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,2,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,
        1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,
        1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,
        1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
        1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    ],
    [
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
        1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,1,
        1,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,
        1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,
        1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,
        1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,1,
        1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,1,
        1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,1,0,1,
        1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
        1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
        1,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,
        1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,1,0,1,
        1,0,1,3,1,0,1,0,1,0,1,0,0,0,1,0,0,1,0,1,
        1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,1,0,1,
        1,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,
        1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,
        1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,
        1,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    ],
    [
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,0,1,0,1,0,1,3,1,0,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    ]
];
var current = -1;

function buildLevelFromArray(array) {
    const stage = document.getElementsByClassName('stage')[0];
    stage.innerHTML = '';
    for (let i = 0; i < array.length; i++) {
        const cell = document.createElement('div');
        if (array[i] === 0) {
            cell.classList.add('path');
        }
        if (array[i] === 1) {
            cell.classList.add('wall');
        }
        if (array[i] === 2) {
            cell.classList.add('start');
        }
        if (array[i] === 3) {
            cell.classList.add('finish');
        }
        stage.appendChild(cell);
    }
}


addEventListener('click', (e) => {
    if (e.target.classList.contains('start')) {
        addEventListener('mouseover', (e) => {
            if (e.target.classList.contains('wall')) {
                restartGame();
            }
        });
        addEventListener('click', (e) => {
            if (e.target.classList.contains('finish')) {
                nextLevel();
            }
        });
    }
});
addEventListener('click', (e) => {
    if (e.target.classList.contains('finish')) {
        nextLevel();
    }
});

function restartGame() {
    alert('You lose!');
    window.location.reload();
}

function winGame() {
    alert('You win!');
    window.location.reload();
}

function nextLevel() {
    current ++;
    if (current >= levels.length) {
        winGame();
    } else {
        buildLevelFromArray(levels[current]);
    }
}

nextLevel();